; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\ms5611.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\ms5611.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\sys -ID:\KEIL\KEIL_Pro\KEIL_5\ARM\RV31\INC -ID:\KEIL\KEIL_Pro\KEIL_5\ARM\CMSIS\Include -ID:\KEIL\KEIL_Pro\KEIL_5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\ms5611.crf ..\..\User\Modules\Modules_ms5611\MS5611.c]
                          THUMB

                          AREA ||i.MS561101BA_RESET||, CODE, READONLY, ALIGN=1

                  MS561101BA_RESET PROC
;;;116    *******************************************************************************/
;;;117    void MS561101BA_RESET(void)
000000  b510              PUSH     {r4,lr}
;;;118    {
;;;119    	I2C_Start();
000002  f7fffffe          BL       I2C_Start
;;;120    	I2C_SendByte(MS561101BA_SlaveAddress);
000006  20ee              MOVS     r0,#0xee
000008  f7fffffe          BL       I2C_SendByte
;;;121    	I2C_WaitAck();
00000c  f7fffffe          BL       I2C_WaitAck
;;;122    	I2C_SendByte(MS561101BA_RST);
000010  201e              MOVS     r0,#0x1e
000012  f7fffffe          BL       I2C_SendByte
;;;123    	I2C_WaitAck();
000016  f7fffffe          BL       I2C_WaitAck
;;;124    	I2C_Stop();
00001a  f7fffffe          BL       I2C_Stop
;;;125    }
00001e  bd10              POP      {r4,pc}
;;;126    /*******************************************************************************
                          ENDP


                          AREA ||i.MS5611_Init||, CODE, READONLY, ALIGN=1

                  MS5611_Init PROC
;;;97     /*====================================================================================================*/
;;;98     u8 MS5611_Init(void)
000000  b510              PUSH     {r4,lr}
;;;99     {
;;;100    	delay_ms(10);
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       delay_ms
;;;101    	//传感器复位
;;;102    	MS5611_Reset();
000008  f7fffffe          BL       MS5611_Reset
;;;103    	delay_ms(3);
00000c  2003              MOVS     r0,#3
00000e  f7fffffe          BL       delay_ms
;;;104    	MS5611_Read_Prom();
000012  f7fffffe          BL       MS5611_Read_Prom
;;;105    	//开始读取温度
;;;106    //	MS5611_Start_T();
;;;107    	return 0;
000016  2000              MOVS     r0,#0
;;;108    }
000018  bd10              POP      {r4,pc}
;;;109    
                          ENDP


                          AREA ||i.MS5611_Read_Prom||, CODE, READONLY, ALIGN=1

                  MS5611_Read_Prom PROC
;;;70     
;;;71     u8 MS5611_Read_Prom(void)
000000  2200              MOVS     r2,#0
;;;72     {
;;;73     //	uint8_t rxbuf[2] = { 0, 0 };
;;;74     	u8 check = 0;
;;;75     	u8 i;
;;;76     
;;;77     	for (i = 0; i < PROM_NB; i++)
000002  2100              MOVS     r1,#0
000004  e001              B        |L3.10|
                  |L3.6|
000006  1c48              ADDS     r0,r1,#1
000008  b2c1              UXTB     r1,r0
                  |L3.10|
00000a  2908              CMP      r1,#8
00000c  dbfb              BLT      |L3.6|
;;;78     	{
;;;79     	//	check += IIC_Read_nByte(MS5611_ADDR, CMD_PROM_RD + i * 2, 2, rxbuf); // send PROM READ command
;;;80     	//	ms5611_prom[i] = rxbuf[0] << 8 | rxbuf[1];
;;;81     	}
;;;82     
;;;83     	if(check==PROM_NB)
00000e  2a08              CMP      r2,#8
000010  d101              BNE      |L3.22|
;;;84     		return 1;
000012  2001              MOVS     r0,#1
                  |L3.20|
;;;85     	else
;;;86     		return 0;
;;;87     }
000014  4770              BX       lr
                  |L3.22|
000016  2000              MOVS     r0,#0                 ;86
000018  e7fc              B        |L3.20|
;;;88     
                          ENDP


                          AREA ||i.MS5611_Reset||, CODE, READONLY, ALIGN=1

                  MS5611_Reset PROC
;;;64     /*====================================================================================================*/
;;;65     void MS5611_Reset(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67     	Single_Write(MS5611_ADDR,CMD_RESET,1);
000002  2201              MOVS     r2,#1
000004  211e              MOVS     r1,#0x1e
000006  20ee              MOVS     r0,#0xee
000008  f7fffffe          BL       Single_Write
;;;68     }
00000c  bd10              POP      {r4,pc}
;;;69     
                          ENDP


                          AREA ||i.MS5611_init||, CODE, READONLY, ALIGN=2

                  MS5611_init PROC
;;;132    *******************************************************************************/
;;;133    u8 MS5611_init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;134     {	 
;;;135       uint8_t d1,d2,i;
;;;136       MS561101BA_RESET();	 // Reset Device
000002  f7fffffe          BL       MS561101BA_RESET
;;;137    	 delay_ms(20);  
000006  2014              MOVS     r0,#0x14
000008  f7fffffe          BL       delay_ms
;;;138    	 for(i=1;i<=6;i++)
00000c  2401              MOVS     r4,#1
00000e  e032              B        |L5.118|
                  |L5.16|
;;;139    	 {
;;;140    		I2C_Start();
000010  f7fffffe          BL       I2C_Start
;;;141    		I2C_SendByte(MS561101BA_SlaveAddress);
000014  20ee              MOVS     r0,#0xee
000016  f7fffffe          BL       I2C_SendByte
;;;142    		I2C_WaitAck();
00001a  f7fffffe          BL       I2C_WaitAck
;;;143    		I2C_SendByte((MS561101BA_PROM_RD+i*2));
00001e  21a0              MOVS     r1,#0xa0
000020  eb010144          ADD      r1,r1,r4,LSL #1
000024  b2c8              UXTB     r0,r1
000026  f7fffffe          BL       I2C_SendByte
;;;144    		I2C_WaitAck();
00002a  f7fffffe          BL       I2C_WaitAck
;;;145    	  I2C_Stop();
00002e  f7fffffe          BL       I2C_Stop
;;;146    		delay_ms(1);
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       delay_ms
;;;147    
;;;148    		I2C_Start();
000038  f7fffffe          BL       I2C_Start
;;;149    		I2C_SendByte(MS561101BA_SlaveAddress+1);
00003c  20ef              MOVS     r0,#0xef
00003e  f7fffffe          BL       I2C_SendByte
;;;150    		I2C_WaitAck();
000042  f7fffffe          BL       I2C_WaitAck
;;;151    		d1=I2C_RadeByte();
000046  f7fffffe          BL       I2C_RadeByte
00004a  4605              MOV      r5,r0
;;;152    		I2C_Ack();
00004c  f7fffffe          BL       I2C_Ack
;;;153    		d2=I2C_RadeByte();
000050  f7fffffe          BL       I2C_RadeByte
000054  4606              MOV      r6,r0
;;;154    		I2C_NoAck();
000056  f7fffffe          BL       I2C_NoAck
;;;155    		I2C_Stop();
00005a  f7fffffe          BL       I2C_Stop
;;;156    
;;;157    		I2C_delay();
00005e  f7fffffe          BL       I2C_delay
;;;158    		Cal_C[i]=((uint16_t)d1<<8)|d2;
000062  ea462005          ORR      r0,r6,r5,LSL #8
000066  4908              LDR      r1,|L5.136|
000068  f8410024          STR      r0,[r1,r4,LSL #2]
;;;159    	  delay_ms(10);
00006c  200a              MOVS     r0,#0xa
00006e  f7fffffe          BL       delay_ms
000072  1c60              ADDS     r0,r4,#1              ;138
000074  b2c4              UXTB     r4,r0                 ;138
                  |L5.118|
000076  2c06              CMP      r4,#6                 ;138
000078  ddca              BLE      |L5.16|
;;;160    	 }
;;;161    	 
;;;162    	 return !Cal_C[0];
00007a  4803              LDR      r0,|L5.136|
00007c  6800              LDR      r0,[r0,#0]  ; Cal_C
00007e  b908              CBNZ     r0,|L5.132|
000080  2001              MOVS     r0,#1
                  |L5.130|
;;;163     }
000082  bd70              POP      {r4-r6,pc}
                  |L5.132|
000084  2000              MOVS     r0,#0                 ;162
000086  e7fc              B        |L5.130|
;;;164    
                          ENDP

                  |L5.136|
                          DCD      Cal_C

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Cal_C
                          %        28
                  Pres_BUFFER
                          %        80
                  Temp_BUFFER
                          %        400
                  Acc_speed_Filterbuffer
                          %        40

                          AREA ||.data||, DATA, ALIGN=3

                  OFF_
                          %        8
                  Aux
                          DCD      0x00000000
                          DCD      0x00000000
                  ||dT||
                          %        8
                  TEMP
                          %        8
                  OFf
                          %        8
                  SENS
                          %        8
                  D1_Pres
                          DCD      0x00000000
                  D2_Temp
                          DCD      0x00000000
                  Pressure
                          DCD      0x00000000
                  Pressure_old
                          DCD      0x00000000
                  qqp
                          DCD      0x00000000
                  TEMP2
                          DCD      0x00000000
                  ||T2||
                          DCD      0x00000000
                  OFF2
                          DCD      0x00000000
                  SENS2
                          DCD      0x00000000
                  acc_speedz
                          DCD      0x00000000
                  SpeedZ
                          DCD      0x00000000
                  SpeedZ_old
                          DCD      0x00000000

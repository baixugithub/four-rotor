; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\Flash\Obj\multirotor_app.o --depend=.\Flash\Obj\multirotor_app.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\sys -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Flash\Obj\multirotor_app.crf ..\..\User\Function\MultiRotor_app\MultiRotor_app.c]
                          THUMB

                          AREA ||i.Bootloader_Set||, CODE, READONLY, ALIGN=2

                  Bootloader_Set PROC
;;;28     /*====================================================================================================*/
;;;29     void Bootloader_Set(void)
000000  b508              PUSH     {r3,lr}
;;;30     {
;;;31      	u16 i[1]={0};
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;32     	
;;;33     	// 设置偏移量 
;;;34     	SCB->VTOR = FLASH_BASE | FLASH_EXCURSION ;
000006  480c              LDR      r0,|L1.56|
000008  490c              LDR      r1,|L1.60|
00000a  6008              STR      r0,[r1,#0]
;;;35     	
;;;36     	STMFLASH_Read(pro_FALG_ADD,&i[0],1);
00000c  f04f0201          MOV      r2,#1
000010  4669              MOV      r1,sp
000012  480b              LDR      r0,|L1.64|
000014  f7fffffe          BL       STMFLASH_Read
;;;37     	if(i[0]!=0x0505) {
000018  f8bd0000          LDRH     r0,[sp,#0]
00001c  f5a061a0          SUB      r1,r0,#0x500
000020  3905              SUBS     r1,#5
000022  d007              BEQ      |L1.52|
;;;38     		i[0]=0x0505;
000024  f2405005          MOV      r0,#0x505
000028  9000              STR      r0,[sp,#0]
;;;39     		STMFLASH_Write(pro_FALG_ADD,&i[0],1);
00002a  2201              MOVS     r2,#1
00002c  4669              MOV      r1,sp
00002e  4804              LDR      r0,|L1.64|
000030  f7fffffe          BL       STMFLASH_Write
                  |L1.52|
;;;40     	}		
;;;41     }
000034  bd08              POP      {r3,pc}
;;;42     /*====================================================================================================*/
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x08020000
                  |L1.60|
                          DCD      0xe000ed08
                  |L1.64|
                          DCD      0x0801fff0

                          AREA ||i.InitBoard||, CODE, READONLY, ALIGN=1

                  InitBoard PROC
;;;50     /*====================================================================================================*/
;;;51     void InitBoard(void)
000000  b510              PUSH     {r4,lr}
;;;52     {
;;;53     	delay_init(72);
000002  2048              MOVS     r0,#0x48
000004  f7fffffe          BL       delay_init
;;;54     	Nvic_Init();
000008  f7fffffe          BL       Nvic_Init
;;;55     	
;;;56     	/* 初始化USB设备 */
;;;57     	bsp_InitUsb();
00000c  f7fffffe          BL       bsp_InitUsb
;;;58     	 
;;;59     	ADC1_Init();	
000010  f7fffffe          BL       ADC1_Init
;;;60     	OLED_Init();
000014  f7fffffe          BL       OLED_Init
;;;61     	I2C_INIT();
000018  f7fffffe          BL       I2C_INIT
;;;62     	LED_GPIO_Config();
00001c  f7fffffe          BL       LED_GPIO_Config
;;;63     	USART1_Config();
000020  f7fffffe          BL       USART1_Config
;;;64     	TIM5_Config();
000024  f7fffffe          BL       TIM5_Config
;;;65     	PWM_OUT_Config();
000028  f7fffffe          BL       PWM_OUT_Config
;;;66     	PWM_IN_Config();
00002c  f7fffffe          BL       PWM_IN_Config
;;;67     	NRF24L01_Init();
000030  f7fffffe          BL       NRF24L01_Init
;;;68      	LED_SHOW();
000034  f7fffffe          BL       LED_SHOW
;;;69      	FLASH_Unlock();
000038  f7fffffe          BL       FLASH_Unlock
;;;70      	EE_Init();
00003c  f7fffffe          BL       EE_Init
;;;71     }
000040  bd10              POP      {r4,pc}
;;;72     /*====================================================================================================*/
                          ENDP


                          AREA ||i.Screen_Update||, CODE, READONLY, ALIGN=2

                  Screen_Update PROC
;;;106    /*====================================================================================================*/
;;;107    void Screen_Update(void)
000000  b538              PUSH     {r3-r5,lr}
;;;108    {
;;;109    	Dis_Float(1,40,AngE.Roll,1);
000002  4922              LDR      r1,|L3.140|
000004  6848              LDR      r0,[r1,#4]  ; AngE
000006  f7fffffe          BL       __aeabi_f2d
00000a  4604              MOV      r4,r0
00000c  2301              MOVS     r3,#1
00000e  4602              MOV      r2,r0
000010  9300              STR      r3,[sp,#0]
000012  460b              MOV      r3,r1
000014  2128              MOVS     r1,#0x28
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       Dis_Float
;;;110    	Dis_Float(2,40,AngE.Pitch,1);
00001c  491b              LDR      r1,|L3.140|
00001e  6808              LDR      r0,[r1,#0]  ; AngE
000020  f7fffffe          BL       __aeabi_f2d
000024  4604              MOV      r4,r0
000026  2301              MOVS     r3,#1
000028  4602              MOV      r2,r0
00002a  9300              STR      r3,[sp,#0]
00002c  460b              MOV      r3,r1
00002e  2128              MOVS     r1,#0x28
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       Dis_Float
;;;111    	Dis_Float(3,40,AngE.Yaw,1);
000036  4915              LDR      r1,|L3.140|
000038  6888              LDR      r0,[r1,#8]  ; AngE
00003a  f7fffffe          BL       __aeabi_f2d
00003e  4604              MOV      r4,r0
000040  2301              MOVS     r3,#1
000042  4602              MOV      r2,r0
000044  9300              STR      r3,[sp,#0]
000046  460b              MOV      r3,r1
000048  2128              MOVS     r1,#0x28
00004a  2003              MOVS     r0,#3
00004c  f7fffffe          BL       Dis_Float
;;;112    	OLED_4num(4,5,RC_Data.YAW);
000050  480f              LDR      r0,|L3.144|
000052  f9b02012          LDRSH    r2,[r0,#0x12]  ; RC_Data
000056  2105              MOVS     r1,#5
000058  2004              MOVS     r0,#4
00005a  f7fffffe          BL       OLED_4num
;;;113    	OLED_4num(4,6,RC_Data.THROTTLE);
00005e  480c              LDR      r0,|L3.144|
000060  f9b02010          LDRSH    r2,[r0,#0x10]  ; RC_Data
000064  2106              MOVS     r1,#6
000066  2004              MOVS     r0,#4
000068  f7fffffe          BL       OLED_4num
;;;114    	OLED_4num(57,5,RC_Data.ROLL);
00006c  4808              LDR      r0,|L3.144|
00006e  f9b0200c          LDRSH    r2,[r0,#0xc]  ; RC_Data
000072  2105              MOVS     r1,#5
000074  2039              MOVS     r0,#0x39
000076  f7fffffe          BL       OLED_4num
;;;115    	OLED_4num(58,6,RC_Data.PITCH);
00007a  4805              LDR      r0,|L3.144|
00007c  f9b0200e          LDRSH    r2,[r0,#0xe]  ; RC_Data
000080  2106              MOVS     r1,#6
000082  203a              MOVS     r0,#0x3a
000084  f7fffffe          BL       OLED_4num
;;;116    }
000088  bd38              POP      {r3-r5,pc}
;;;117    //
                          ENDP

00008a  0000              DCW      0x0000
                  |L3.140|
                          DCD      AngE
                  |L3.144|
                          DCD      RC_Data

                          AREA ||i.Sensor_Init||, CODE, READONLY, ALIGN=2

                  Sensor_Init PROC
;;;80     /*====================================================================================================*/
;;;81     void Sensor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;82     {
;;;83     	flag.MpuExist = InitMPU6050();
000002  f7fffffe          BL       InitMPU6050
000006  4919              LDR      r1,|L4.108|
000008  7008              STRB     r0,[r1,#0]
;;;84     	flag.MagExist = Init_HMC5883L();
00000a  f7fffffe          BL       Init_HMC5883L
00000e  4917              LDR      r1,|L4.108|
000010  7048              STRB     r0,[r1,#1]
;;;85     	flag.NrfExist = NRF24L01_Check();
000012  f7fffffe          BL       NRF24L01_Check
000016  4915              LDR      r1,|L4.108|
000018  7088              STRB     r0,[r1,#2]
;;;86     	Ultrasonic_Config();
00001a  f7fffffe          BL       Ultrasonic_Config
;;;87     	NRF24L01_Mode(1);
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       NRF24L01_Mode
;;;88     	
;;;89     	OLED_P6x8Str(0,1,"ROLL:");
000024  a212              ADR      r2,|L4.112|
000026  2101              MOVS     r1,#1
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       OLED_P6x8Str
;;;90     	OLED_P6x8Str(0,2,"PITCH:"); 
00002e  a212              ADR      r2,|L4.120|
000030  2102              MOVS     r1,#2
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       OLED_P6x8Str
;;;91     	OLED_P6x8Str(0,3,"YAW:");
000038  a211              ADR      r2,|L4.128|
00003a  2103              MOVS     r1,#3
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       OLED_P6x8Str
;;;92     	OLED_P6x8Str(0,5,"YAW:");
000042  a20f              ADR      r2,|L4.128|
000044  2105              MOVS     r1,#5
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       OLED_P6x8Str
;;;93     	OLED_P6x8Str(0,6,"THR:");
00004c  a20e              ADR      r2,|L4.136|
00004e  2106              MOVS     r1,#6
000050  2000              MOVS     r0,#0
000052  f7fffffe          BL       OLED_P6x8Str
;;;94     	OLED_P6x8Str(56,5,"ROLL:");
000056  a206              ADR      r2,|L4.112|
000058  2105              MOVS     r1,#5
00005a  2038              MOVS     r0,#0x38
00005c  f7fffffe          BL       OLED_P6x8Str
;;;95     	OLED_P6x8Str(56,6,"PITCH:"); 
000060  a205              ADR      r2,|L4.120|
000062  2106              MOVS     r1,#6
000064  2038              MOVS     r0,#0x38
000066  f7fffffe          BL       OLED_P6x8Str
;;;96     }
00006a  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  |L4.108|
                          DCD      flag
                  |L4.112|
000070  524f4c4c          DCB      "ROLL:",0
000074  3a00    
000076  00                DCB      0
000077  00                DCB      0
                  |L4.120|
000078  50495443          DCB      "PITCH:",0
00007c  483a00  
00007f  00                DCB      0
                  |L4.128|
000080  5941573a          DCB      "YAW:",0
000084  00      
000085  00                DCB      0
000086  00                DCB      0
000087  00                DCB      0
                  |L4.136|
000088  5448523a          DCB      "THR:",0
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0

                          AREA ||i.Time_slice||, CODE, READONLY, ALIGN=2

                  Time_slice PROC
;;;158    /*====================================================================================================*/
;;;159    void Time_slice(void)
000000  481d              LDR      r0,|L5.120|
;;;160    {
;;;161    	static u16 tick[]={0,0,0,0};//可通过扩展数组来增加多个功能
;;;162    	tick[0]++; //USB发送数据和LED灯的状态显示
000002  8800              LDRH     r0,[r0,#0]  ; tick
000004  1c40              ADDS     r0,r0,#1
000006  491c              LDR      r1,|L5.120|
000008  8008              STRH     r0,[r1,#0]
;;;163    	tick[1]++; //串口发送数据和OLED液晶刷屏
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
;;;164    	tick[2]++; //保存姿态PID参数
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
;;;165    /////////////////////////////////////////
;;;166    	tick[3]++; //停止前飞电机
00001a  4608              MOV      r0,r1
00001c  88c0              LDRH     r0,[r0,#6]  ; tick
00001e  1c40              ADDS     r0,r0,#1
000020  80c8              STRH     r0,[r1,#6]
;;;167    
;;;168    	if(tick[0]>=2)	 //4ms执行一次(1/2*2)ms
000022  4608              MOV      r0,r1
000024  8800              LDRH     r0,[r0,#0]  ; tick
000026  2802              CMP      r0,#2
000028  db04              BLT      |L5.52|
;;;169    	{
;;;170    		tick[0] = 0;
00002a  2000              MOVS     r0,#0
00002c  8008              STRH     r0,[r1,#0]
;;;171    		flag.Loop_250Hz = 1;
00002e  2001              MOVS     r0,#1
000030  4912              LDR      r1,|L5.124|
000032  7288              STRB     r0,[r1,#0xa]
                  |L5.52|
;;;172    	}
;;;173    	if(tick[1]>=5)
000034  4810              LDR      r0,|L5.120|
000036  8840              LDRH     r0,[r0,#2]  ; tick
000038  2805              CMP      r0,#5
00003a  db05              BLT      |L5.72|
;;;174    	{
;;;175    		tick[1] = 0;
00003c  2000              MOVS     r0,#0
00003e  490e              LDR      r1,|L5.120|
000040  8048              STRH     r0,[r1,#2]
;;;176    		flag.Loop_100Hz = 1;
000042  2001              MOVS     r0,#1
000044  490d              LDR      r1,|L5.124|
000046  72c8              STRB     r0,[r1,#0xb]
                  |L5.72|
;;;177    	}	
;;;178    	if(tick[2] >= 50)	
000048  480b              LDR      r0,|L5.120|
00004a  8880              LDRH     r0,[r0,#4]  ; tick
00004c  2832              CMP      r0,#0x32
00004e  db05              BLT      |L5.92|
;;;179    	{
;;;180    		tick[2] = 0;
000050  2000              MOVS     r0,#0
000052  4909              LDR      r1,|L5.120|
000054  8088              STRH     r0,[r1,#4]
;;;181    		flag.Loop_10Hz = 1;
000056  2001              MOVS     r0,#1
000058  4908              LDR      r1,|L5.124|
00005a  7308              STRB     r0,[r1,#0xc]
                  |L5.92|
;;;182    	}
;;;183    	if(tick[3] >= 1500)//向前飞3s	
00005c  4806              LDR      r0,|L5.120|
00005e  88c0              LDRH     r0,[r0,#6]  ; tick
000060  f24051dc          MOV      r1,#0x5dc
000064  4288              CMP      r0,r1
000066  db05              BLT      |L5.116|
;;;184    	{
;;;185    		tick[3] = 0;
000068  2000              MOVS     r0,#0
00006a  4903              LDR      r1,|L5.120|
00006c  80c8              STRH     r0,[r1,#6]
;;;186    		flag.Loop_3s = 1;
00006e  2001              MOVS     r0,#1
000070  4902              LDR      r1,|L5.124|
000072  7348              STRB     r0,[r1,#0xd]
                  |L5.116|
;;;187    	}
;;;188    }				   
000074  4770              BX       lr
;;;189    /******************1*****************************************/
                          ENDP

000076  0000              DCW      0x0000
                  |L5.120|
                          DCD      tick
                  |L5.124|
                          DCD      flag

                          AREA ||i.Time_slice_1||, CODE, READONLY, ALIGN=2

                  Time_slice_1 PROC
;;;236    /*====================================================================================================*/
;;;237    void Time_slice_1(void)
000000  482f              LDR      r0,|L6.192|
;;;238    {
;;;239    	static u16 tick_1[]={0,0,0,0,0,0};//可通过扩展数组来增加多个功能
;;;240    	
;;;241    	tick_1[0]++; //USB发送数据和LED灯的状态显示
000002  8800              LDRH     r0,[r0,#0]  ; tick_1
000004  1c40              ADDS     r0,r0,#1
000006  492e              LDR      r1,|L6.192|
000008  8008              STRH     r0,[r1,#0]
;;;242    	tick_1[1]++; //串口发送数据和OLED液晶刷屏
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick_1
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
;;;243    	tick_1[2]++; //保存姿态PID参数
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick_1
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
;;;244    	tick_1[3]++; //停止前飞电机
00001a  4608              MOV      r0,r1
00001c  88c0              LDRH     r0,[r0,#6]  ; tick_1
00001e  1c40              ADDS     r0,r0,#1
000020  80c8              STRH     r0,[r1,#6]
;;;245    	tick_1[4]++; //向前飞停止延时
000022  4608              MOV      r0,r1
000024  8900              LDRH     r0,[r0,#8]  ; tick_1
000026  1c40              ADDS     r0,r0,#1
000028  8108              STRH     r0,[r1,#8]
;;;246    	tick_1[5]++; //反向飞停止
00002a  4608              MOV      r0,r1
00002c  8940              LDRH     r0,[r0,#0xa]  ; tick_1
00002e  1c40              ADDS     r0,r0,#1
000030  8148              STRH     r0,[r1,#0xa]
;;;247    
;;;248    
;;;249    	if(tick_1[0]>=2)	 //4ms执行一次(1/2*2)ms
000032  4608              MOV      r0,r1
000034  8800              LDRH     r0,[r0,#0]  ; tick_1
000036  2802              CMP      r0,#2
000038  db04              BLT      |L6.68|
;;;250    	{
;;;251    		tick_1[0] = 0;
00003a  2000              MOVS     r0,#0
00003c  8008              STRH     r0,[r1,#0]
;;;252    		flag1.Loop1_250Hz = 1;
00003e  2001              MOVS     r0,#1
000040  4920              LDR      r1,|L6.196|
000042  7008              STRB     r0,[r1,#0]
                  |L6.68|
;;;253    	}
;;;254    	if(tick_1[1]>=5)
000044  481e              LDR      r0,|L6.192|
000046  8840              LDRH     r0,[r0,#2]  ; tick_1
000048  2805              CMP      r0,#5
00004a  db05              BLT      |L6.88|
;;;255    	{
;;;256    		tick_1[1] = 0;
00004c  2000              MOVS     r0,#0
00004e  491c              LDR      r1,|L6.192|
000050  8048              STRH     r0,[r1,#2]
;;;257    		flag1.Loop1_100Hz = 1;
000052  2001              MOVS     r0,#1
000054  491b              LDR      r1,|L6.196|
000056  7048              STRB     r0,[r1,#1]
                  |L6.88|
;;;258    	}	
;;;259    	if(tick_1[2] >= 50)	
000058  4819              LDR      r0,|L6.192|
00005a  8880              LDRH     r0,[r0,#4]  ; tick_1
00005c  2832              CMP      r0,#0x32
00005e  db05              BLT      |L6.108|
;;;260    	{
;;;261    		tick_1[2] = 0;
000060  2000              MOVS     r0,#0
000062  4917              LDR      r1,|L6.192|
000064  8088              STRH     r0,[r1,#4]
;;;262    		flag1.Loop1_10Hz = 1;
000066  2001              MOVS     r0,#1
000068  4916              LDR      r1,|L6.196|
00006a  7088              STRB     r0,[r1,#2]
                  |L6.108|
;;;263    	}
;;;264    
;;;265    	if(tick_1[3] >= 1500)	
00006c  4814              LDR      r0,|L6.192|
00006e  88c0              LDRH     r0,[r0,#6]  ; tick_1
000070  f24051dc          MOV      r1,#0x5dc
000074  4288              CMP      r0,r1
000076  db07              BLT      |L6.136|
;;;266    	{
;;;267    		tick_1[3] = 0;
000078  2000              MOVS     r0,#0
00007a  4911              LDR      r1,|L6.192|
00007c  80c8              STRH     r0,[r1,#6]
;;;268    		flag1.Loop1_3s = 1;
00007e  2001              MOVS     r0,#1
000080  4910              LDR      r1,|L6.196|
000082  70c8              STRB     r0,[r1,#3]
;;;269    		Mark_forward = 1;//前飞停止位
000084  4910              LDR      r1,|L6.200|
000086  7008              STRB     r0,[r1,#0]
                  |L6.136|
;;;270    	}
;;;271    	if(tick_1[4] >= 3500)	
000088  480d              LDR      r0,|L6.192|
00008a  8900              LDRH     r0,[r0,#8]  ; tick_1
00008c  f64051ac          MOV      r1,#0xdac
000090  4288              CMP      r0,r1
000092  db07              BLT      |L6.164|
;;;272    	{
;;;273    		tick_1[4] = 0;
000094  2000              MOVS     r0,#0
000096  490a              LDR      r1,|L6.192|
000098  8108              STRH     r0,[r1,#8]
;;;274        	Mark_forward = 0;//后飞标志位
00009a  490b              LDR      r1,|L6.200|
00009c  7008              STRB     r0,[r1,#0]
;;;275    		flag1.Loop1_3_5s = 1;	
00009e  2001              MOVS     r0,#1
0000a0  4908              LDR      r1,|L6.196|
0000a2  7108              STRB     r0,[r1,#4]
                  |L6.164|
;;;276    	}
;;;277    	if(tick_1[5] >= 7500)//向后飞延时3.5s
0000a4  4806              LDR      r0,|L6.192|
0000a6  8940              LDRH     r0,[r0,#0xa]  ; tick_1
0000a8  f641514c          MOV      r1,#0x1d4c
0000ac  4288              CMP      r0,r1
0000ae  db05              BLT      |L6.188|
;;;278    	{
;;;279    		tick_1[5] = 0;
0000b0  2000              MOVS     r0,#0
0000b2  4903              LDR      r1,|L6.192|
0000b4  8148              STRH     r0,[r1,#0xa]
;;;280    		flag1.Loop1_7s = 1;
0000b6  2001              MOVS     r0,#1
0000b8  4902              LDR      r1,|L6.196|
0000ba  7148              STRB     r0,[r1,#5]
                  |L6.188|
;;;281    	}
;;;282    
;;;283    }
0000bc  4770              BX       lr
;;;284    /******************2*****************************************/
                          ENDP

0000be  0000              DCW      0x0000
                  |L6.192|
                          DCD      tick_1
                  |L6.196|
                          DCD      flag1
                  |L6.200|
                          DCD      Mark_forward

                          AREA ||i.Time_slice_2||, CODE, READONLY, ALIGN=2

                  Time_slice_2 PROC
;;;332    /*====================================================================================================*/
;;;333    void Time_slice_2(void)
000000  4826              LDR      r0,|L7.156|
;;;334    {
;;;335    	static u16 tick_2[]={0,0,0,0,0};//可通过扩展数组来增加多个功能
;;;336    	
;;;337    	tick_2[0]++; //USB发送数据和LED灯的状态显示
000002  8800              LDRH     r0,[r0,#0]  ; tick_2
000004  1c40              ADDS     r0,r0,#1
000006  4925              LDR      r1,|L7.156|
000008  8008              STRH     r0,[r1,#0]
;;;338    	tick_2[1]++; //串口发送数据和OLED液晶刷屏
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick_2
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
;;;339    	tick_2[2]++; //保存姿态PID参数
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick_2
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
;;;340    	tick_2[3]++; //停止前飞电机
00001a  4608              MOV      r0,r1
00001c  88c0              LDRH     r0,[r0,#6]  ; tick_2
00001e  1c40              ADDS     r0,r0,#1
000020  80c8              STRH     r0,[r1,#6]
;;;341    	tick_2[4]++; //返航延时
000022  4608              MOV      r0,r1
000024  8900              LDRH     r0,[r0,#8]  ; tick_2
000026  1c40              ADDS     r0,r0,#1
000028  8108              STRH     r0,[r1,#8]
;;;342    
;;;343    
;;;344    	if(tick_2[0]>=2)	 //4ms执行一次(1/2*2)ms
00002a  4608              MOV      r0,r1
00002c  8800              LDRH     r0,[r0,#0]  ; tick_2
00002e  2802              CMP      r0,#2
000030  db04              BLT      |L7.60|
;;;345    	{
;;;346    		tick_2[0] = 0;
000032  2000              MOVS     r0,#0
000034  8008              STRH     r0,[r1,#0]
;;;347    		flag2.Loop2_250Hz = 1;
000036  2001              MOVS     r0,#1
000038  4919              LDR      r1,|L7.160|
00003a  7008              STRB     r0,[r1,#0]
                  |L7.60|
;;;348    	}
;;;349    	if(tick_2[1]>=5)
00003c  4817              LDR      r0,|L7.156|
00003e  8840              LDRH     r0,[r0,#2]  ; tick_2
000040  2805              CMP      r0,#5
000042  db05              BLT      |L7.80|
;;;350    	{
;;;351    		tick_2[1] = 0;
000044  2000              MOVS     r0,#0
000046  4915              LDR      r1,|L7.156|
000048  8048              STRH     r0,[r1,#2]
;;;352    		flag2.Loop2_100Hz = 1;
00004a  2001              MOVS     r0,#1
00004c  4914              LDR      r1,|L7.160|
00004e  7048              STRB     r0,[r1,#1]
                  |L7.80|
;;;353    	}	
;;;354    	if(tick_2[2] >= 50)	
000050  4812              LDR      r0,|L7.156|
000052  8880              LDRH     r0,[r0,#4]  ; tick_2
000054  2832              CMP      r0,#0x32
000056  db05              BLT      |L7.100|
;;;355    	{
;;;356    		tick_2[2] = 0;
000058  2000              MOVS     r0,#0
00005a  4910              LDR      r1,|L7.156|
00005c  8088              STRH     r0,[r1,#4]
;;;357    		flag2.Loop2_10Hz = 1;
00005e  2001              MOVS     r0,#1
000060  490f              LDR      r1,|L7.160|
000062  7088              STRB     r0,[r1,#2]
                  |L7.100|
;;;358    	}
;;;359    	if(tick_2[3] >= 1500)	
000064  480d              LDR      r0,|L7.156|
000066  88c0              LDRH     r0,[r0,#6]  ; tick_2
000068  f24051dc          MOV      r1,#0x5dc
00006c  4288              CMP      r0,r1
00006e  db08              BLT      |L7.130|
;;;360    	{
;;;361    		tick_2[3] = 0;
000070  2000              MOVS     r0,#0
000072  490a              LDR      r1,|L7.156|
000074  80c8              STRH     r0,[r1,#6]
;;;362    		flag2.Loop2_3s = 1;
000076  2001              MOVS     r0,#1
000078  4909              LDR      r1,|L7.160|
00007a  70c8              STRB     r0,[r1,#3]
;;;363    		Mark_forward_1 = 0;		//返航
00007c  2000              MOVS     r0,#0
00007e  4909              LDR      r1,|L7.164|
000080  7008              STRB     r0,[r1,#0]
                  |L7.130|
;;;364    	}
;;;365    	if(tick_2[4] >=3250)	
000082  4806              LDR      r0,|L7.156|
000084  8900              LDRH     r0,[r0,#8]  ; tick_2
000086  f64041b2          MOV      r1,#0xcb2
00008a  4288              CMP      r0,r1
00008c  db05              BLT      |L7.154|
;;;366    	{
;;;367    		tick_2[4] = 0;
00008e  2000              MOVS     r0,#0
000090  4902              LDR      r1,|L7.156|
000092  8108              STRH     r0,[r1,#8]
;;;368    		flag2.Loop2_7s = 1;
000094  2001              MOVS     r0,#1
000096  4902              LDR      r1,|L7.160|
000098  7148              STRB     r0,[r1,#5]
                  |L7.154|
;;;369    	}
;;;370    
;;;371    }
00009a  4770              BX       lr
;;;372    /******************3*****************************************/
                          ENDP

                  |L7.156|
                          DCD      tick_2
                  |L7.160|
                          DCD      flag2
                  |L7.164|
                          DCD      Mark_forward_1

                          AREA ||i.Time_slice_3||, CODE, READONLY, ALIGN=2

                  Time_slice_3 PROC
;;;418    /*====================================================================================================*/
;;;419    void Time_slice_3(void)
000000  4841              LDR      r0,|L8.264|
;;;420    {
;;;421    	static u16 tick_3[]={0,0,0,0,0,0,0,0,0,0,0,0};//可通过扩展数组来增加多个功能
;;;422    	
;;;423    	tick_3[0]++; //USB发送数据和LED灯的状态显示
000002  8800              LDRH     r0,[r0,#0]  ; tick_3
000004  1c40              ADDS     r0,r0,#1
000006  4940              LDR      r1,|L8.264|
000008  8008              STRH     r0,[r1,#0]
;;;424    	tick_3[1]++; //串口发送数据和OLED液晶刷屏
00000a  4608              MOV      r0,r1
00000c  8840              LDRH     r0,[r0,#2]  ; tick_3
00000e  1c40              ADDS     r0,r0,#1
000010  8048              STRH     r0,[r1,#2]
;;;425    	tick_3[2]++; //保存姿态PID参数
000012  4608              MOV      r0,r1
000014  8880              LDRH     r0,[r0,#4]  ; tick_3
000016  1c40              ADDS     r0,r0,#1
000018  8088              STRH     r0,[r1,#4]
;;;426    	tick_3[3]++; //右转
00001a  4608              MOV      r0,r1
00001c  88c0              LDRH     r0,[r0,#6]  ; tick_3
00001e  1c40              ADDS     r0,r0,#1
000020  80c8              STRH     r0,[r1,#6]
;;;427    	tick_3[4]++; //前进
000022  4608              MOV      r0,r1
000024  8900              LDRH     r0,[r0,#8]  ; tick_3
000026  1c40              ADDS     r0,r0,#1
000028  8108              STRH     r0,[r1,#8]
;;;428    	tick_3[5]++; //左转
00002a  4608              MOV      r0,r1
00002c  8940              LDRH     r0,[r0,#0xa]  ; tick_3
00002e  1c40              ADDS     r0,r0,#1
000030  8148              STRH     r0,[r1,#0xa]
;;;429    	tick_3[6]++; //后退
000032  4608              MOV      r0,r1
000034  8980              LDRH     r0,[r0,#0xc]  ; tick_3
000036  1c40              ADDS     r0,r0,#1
000038  8188              STRH     r0,[r1,#0xc]
;;;430    	tick_3[7]++; //停止
00003a  4608              MOV      r0,r1
00003c  89c0              LDRH     r0,[r0,#0xe]  ; tick_3
00003e  1c40              ADDS     r0,r0,#1
000040  81c8              STRH     r0,[r1,#0xe]
;;;431    
;;;432    	{
;;;433    		if(tick_3[0]>=2)	 //4ms执行一次(1/2*2)ms
000042  4608              MOV      r0,r1
000044  8800              LDRH     r0,[r0,#0]  ; tick_3
000046  2802              CMP      r0,#2
000048  db04              BLT      |L8.84|
;;;434    		{
;;;435    			tick_3[0] = 0;
00004a  2000              MOVS     r0,#0
00004c  8008              STRH     r0,[r1,#0]
;;;436    			flag3.Loop3_250Hz = 1;
00004e  2001              MOVS     r0,#1
000050  492e              LDR      r1,|L8.268|
000052  7008              STRB     r0,[r1,#0]
                  |L8.84|
;;;437    		}
;;;438    		if(tick_3[1]>=5)
000054  482c              LDR      r0,|L8.264|
000056  8840              LDRH     r0,[r0,#2]  ; tick_3
000058  2805              CMP      r0,#5
00005a  db05              BLT      |L8.104|
;;;439    		{
;;;440    			tick_3[1] = 0;
00005c  2000              MOVS     r0,#0
00005e  492a              LDR      r1,|L8.264|
000060  8048              STRH     r0,[r1,#2]
;;;441    			flag3.Loop3_100Hz = 1;
000062  2001              MOVS     r0,#1
000064  4929              LDR      r1,|L8.268|
000066  7048              STRB     r0,[r1,#1]
                  |L8.104|
;;;442    		}	
;;;443    		if(tick_3[2] >= 50)	
000068  4827              LDR      r0,|L8.264|
00006a  8880              LDRH     r0,[r0,#4]  ; tick_3
00006c  2832              CMP      r0,#0x32
00006e  db05              BLT      |L8.124|
;;;444    		{
;;;445    			tick_3[2] = 0;
000070  2000              MOVS     r0,#0
000072  4925              LDR      r1,|L8.264|
000074  8088              STRH     r0,[r1,#4]
;;;446    			flag3.Loop3_10Hz = 1;
000076  2001              MOVS     r0,#1
000078  4924              LDR      r1,|L8.268|
00007a  7088              STRB     r0,[r1,#2]
                  |L8.124|
;;;447    		}
;;;448    	}
;;;449    	{
;;;450    		if(tick_3[3] >= 500)	
00007c  4822              LDR      r0,|L8.264|
00007e  88c0              LDRH     r0,[r0,#6]  ; tick_3
000080  f5b07ffa          CMP      r0,#0x1f4
000084  db08              BLT      |L8.152|
;;;451    		{
;;;452    			tick_3[3] = 0;
000086  2000              MOVS     r0,#0
000088  491f              LDR      r1,|L8.264|
00008a  80c8              STRH     r0,[r1,#6]
;;;453    			flag3.Loop3_1s = 1;
00008c  2001              MOVS     r0,#1
00008e  491f              LDR      r1,|L8.268|
000090  70c8              STRB     r0,[r1,#3]
;;;454    			Mark_forward_2 = 2;		//向前
000092  2002              MOVS     r0,#2
000094  491e              LDR      r1,|L8.272|
000096  7008              STRB     r0,[r1,#0]
                  |L8.152|
;;;455    
;;;456    		}
;;;457    		if(tick_3[4] >= 2000)	
000098  481b              LDR      r0,|L8.264|
00009a  8900              LDRH     r0,[r0,#8]  ; tick_3
00009c  f5b06ffa          CMP      r0,#0x7d0
0000a0  db08              BLT      |L8.180|
;;;458    		{
;;;459    			tick_3[4] = 0;
0000a2  2000              MOVS     r0,#0
0000a4  4918              LDR      r1,|L8.264|
0000a6  8108              STRH     r0,[r1,#8]
;;;460    			flag3.Loop3_2s = 1;
0000a8  2001              MOVS     r0,#1
0000aa  4918              LDR      r1,|L8.268|
0000ac  7108              STRB     r0,[r1,#4]
;;;461    			Mark_forward_2 = 3;		//左转
0000ae  2003              MOVS     r0,#3
0000b0  4917              LDR      r1,|L8.272|
0000b2  7008              STRB     r0,[r1,#0]
                  |L8.180|
;;;462    
;;;463    		}	
;;;464    		if(tick_3[5] >= 3000)	
0000b4  4814              LDR      r0,|L8.264|
0000b6  8940              LDRH     r0,[r0,#0xa]  ; tick_3
0000b8  f64031b8          MOV      r1,#0xbb8
0000bc  4288              CMP      r0,r1
0000be  db08              BLT      |L8.210|
;;;465    		{
;;;466    			tick_3[5] = 0;
0000c0  2000              MOVS     r0,#0
0000c2  4911              LDR      r1,|L8.264|
0000c4  8148              STRH     r0,[r1,#0xa]
;;;467    			flag3.Loop3_3s = 1;
0000c6  2001              MOVS     r0,#1
0000c8  4910              LDR      r1,|L8.268|
0000ca  7148              STRB     r0,[r1,#5]
;;;468    			Mark_forward_2 = 4;		//后退
0000cc  2004              MOVS     r0,#4
0000ce  4910              LDR      r1,|L8.272|
0000d0  7008              STRB     r0,[r1,#0]
                  |L8.210|
;;;469    
;;;470    		}	
;;;471    		if(tick_3[6] >= 4000)	
0000d2  480d              LDR      r0,|L8.264|
0000d4  8980              LDRH     r0,[r0,#0xc]  ; tick_3
0000d6  f5b06f7a          CMP      r0,#0xfa0
0000da  db08              BLT      |L8.238|
;;;472    		{
;;;473    			tick_3[6] = 0;
0000dc  2000              MOVS     r0,#0
0000de  490a              LDR      r1,|L8.264|
0000e0  8188              STRH     r0,[r1,#0xc]
;;;474    			flag3.Loop3_4s = 1;
0000e2  2001              MOVS     r0,#1
0000e4  4909              LDR      r1,|L8.268|
0000e6  7188              STRB     r0,[r1,#6]
;;;475    			Mark_forward_2 = 5;		//右转
0000e8  2005              MOVS     r0,#5
0000ea  4909              LDR      r1,|L8.272|
0000ec  7008              STRB     r0,[r1,#0]
                  |L8.238|
;;;476    
;;;477    		}
;;;478    		if(tick_3[7] >= 4500)	
0000ee  4806              LDR      r0,|L8.264|
0000f0  89c0              LDRH     r0,[r0,#0xe]  ; tick_3
0000f2  f2411194          MOV      r1,#0x1194
0000f6  4288              CMP      r0,r1
0000f8  db05              BLT      |L8.262|
;;;479    		{
;;;480    			tick_3[7] = 0;
0000fa  2000              MOVS     r0,#0
0000fc  4902              LDR      r1,|L8.264|
0000fe  81c8              STRH     r0,[r1,#0xe]
;;;481    			flag3.Loop3_5s = 1;		//停止
000100  2001              MOVS     r0,#1
000102  4902              LDR      r1,|L8.268|
000104  71c8              STRB     r0,[r1,#7]
                  |L8.262|
;;;482    
;;;483    		}	
;;;484    	
;;;485    	}
;;;486    
;;;487    
;;;488    }
000106  4770              BX       lr
;;;489    /******************************END****FILE*************************************/
                          ENDP

                  |L8.264|
                          DCD      tick_3
                  |L8.268|
                          DCD      flag3
                  |L8.272|
                          DCD      Mark_forward_2

                          AREA ||i.loop||, CODE, READONLY, ALIGN=2

                  loop PROC
;;;118    /******************0*****************************************/
;;;119    void loop(void)
000000  b510              PUSH     {r4,lr}
;;;120    {
;;;121    	// 250HZ
;;;122    	if(flag.Loop_250Hz)
000002  4815              LDR      r0,|L9.88|
000004  7a80              LDRB     r0,[r0,#0xa]  ; flag
000006  b130              CBZ      r0,|L9.22|
;;;123    	{
;;;124    		flag.Loop_250Hz=0;
000008  2000              MOVS     r0,#0
00000a  4913              LDR      r1,|L9.88|
00000c  7288              STRB     r0,[r1,#0xa]
;;;125    		UsbCmdPro();	//USB发送数据	
00000e  f7fffffe          BL       UsbCmdPro
;;;126    		FailSafeLEDAlarm();	//LED状态指示灯
000012  f7fffffe          BL       FailSafeLEDAlarm
                  |L9.22|
;;;127    	}	
;;;128    	// 100HZ
;;;129    	if(flag.Loop_100Hz)
000016  4810              LDR      r0,|L9.88|
000018  7ac0              LDRB     r0,[r0,#0xb]  ; flag
00001a  b130              CBZ      r0,|L9.42|
;;;130    	{
;;;131    		flag.Loop_100Hz=0;
00001c  2000              MOVS     r0,#0
00001e  490e              LDR      r1,|L9.88|
000020  72c8              STRB     r0,[r1,#0xb]
;;;132    		mavlink();		//串口数据发送
000022  f7fffffe          BL       mavlink
;;;133    		Screen_Update();//屏幕数据更新
000026  f7fffffe          BL       Screen_Update
                  |L9.42|
;;;134    	}
;;;135    	if(flag.Loop_10Hz)
00002a  480b              LDR      r0,|L9.88|
00002c  7b00              LDRB     r0,[r0,#0xc]  ; flag
00002e  b120              CBZ      r0,|L9.58|
;;;136    	{
;;;137    		flag.Loop_10Hz=0;
000030  2000              MOVS     r0,#0
000032  4909              LDR      r1,|L9.88|
000034  7308              STRB     r0,[r1,#0xc]
;;;138    		EE_SAVE_Attitude_PID();//保存姿态PID参数
000036  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L9.58|
;;;139    	}
;;;140    	if(flag.Loop_3s)//3s //前飞停止
00003a  4807              LDR      r0,|L9.88|
00003c  7b40              LDRB     r0,[r0,#0xd]  ; flag
00003e  b148              CBZ      r0,|L9.84|
;;;141    	{
;;;142    		while(flag.Loop_3s)
000040  e004              B        |L9.76|
                  |L9.66|
;;;143    		{
;;;144    			Sign_Video = 0;
000042  2000              MOVS     r0,#0
000044  4905              LDR      r1,|L9.92|
000046  6008              STR      r0,[r1,#0]
;;;145    			moto_STOP();		
000048  f7fffffe          BL       moto_STOP
                  |L9.76|
00004c  4802              LDR      r0,|L9.88|
00004e  7b40              LDRB     r0,[r0,#0xd]          ;142  ; flag
000050  2800              CMP      r0,#0                 ;142
000052  d1f6              BNE      |L9.66|
                  |L9.84|
;;;146    		}			
;;;147    	}
;;;148    }
000054  bd10              POP      {r4,pc}
;;;149    
                          ENDP

000056  0000              DCW      0x0000
                  |L9.88|
                          DCD      flag
                  |L9.92|
                          DCD      0x42210188

                          AREA ||i.loop_1||, CODE, READONLY, ALIGN=2

                  loop_1 PROC
;;;189    /******************1*****************************************/
;;;190    void loop_1(void)
000000  b510              PUSH     {r4,lr}
;;;191    {
;;;192    	// 250HZ
;;;193    	if(flag1.Loop1_250Hz)
000002  4818              LDR      r0,|L10.100|
000004  7800              LDRB     r0,[r0,#0]  ; flag1
000006  b130              CBZ      r0,|L10.22|
;;;194    	{
;;;195    		flag1.Loop1_250Hz=0;
000008  2000              MOVS     r0,#0
00000a  4916              LDR      r1,|L10.100|
00000c  7008              STRB     r0,[r1,#0]
;;;196    		UsbCmdPro();	//USB发送数据	
00000e  f7fffffe          BL       UsbCmdPro
;;;197    		FailSafeLEDAlarm();	//LED状态指示灯
000012  f7fffffe          BL       FailSafeLEDAlarm
                  |L10.22|
;;;198    	}	
;;;199    	// 100HZ
;;;200    	if(flag1.Loop1_100Hz)
000016  4813              LDR      r0,|L10.100|
000018  7840              LDRB     r0,[r0,#1]  ; flag1
00001a  b130              CBZ      r0,|L10.42|
;;;201    	{
;;;202    		flag1.Loop1_100Hz=0;
00001c  2000              MOVS     r0,#0
00001e  4911              LDR      r1,|L10.100|
000020  7048              STRB     r0,[r1,#1]
;;;203    		mavlink();		//串口数据发送
000022  f7fffffe          BL       mavlink
;;;204    		Screen_Update();//屏幕数据更新
000026  f7fffffe          BL       Screen_Update
                  |L10.42|
;;;205    	}
;;;206    	if(flag1.Loop1_10Hz)
00002a  480e              LDR      r0,|L10.100|
00002c  7880              LDRB     r0,[r0,#2]  ; flag1
00002e  b120              CBZ      r0,|L10.58|
;;;207    	{
;;;208    		flag1.Loop1_10Hz=0;
000030  2000              MOVS     r0,#0
000032  490c              LDR      r1,|L10.100|
000034  7088              STRB     r0,[r1,#2]
;;;209    		EE_SAVE_Attitude_PID();//保存姿态PID参数
000036  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L10.58|
;;;210    	}
;;;211    	if(flag1.Loop1_3s)//3s //前飞停止
00003a  480a              LDR      r0,|L10.100|
00003c  78c0              LDRB     r0,[r0,#3]  ; flag1
00003e  b130              CBZ      r0,|L10.78|
;;;212    	{
;;;213    		while(Mark_forward)
000040  e001              B        |L10.70|
                  |L10.66|
;;;214    		{
;;;215    			moto_STOP();		
000042  f7fffffe          BL       moto_STOP
                  |L10.70|
000046  4808              LDR      r0,|L10.104|
000048  7800              LDRB     r0,[r0,#0]            ;213  ; Mark_forward
00004a  2800              CMP      r0,#0                 ;213
00004c  d1f9              BNE      |L10.66|
                  |L10.78|
;;;216    		}			
;;;217    	}
;;;218    	if(flag1.Loop1_7s)//7s 回飞停止位
00004e  4805              LDR      r0,|L10.100|
000050  7940              LDRB     r0,[r0,#5]  ; flag1
000052  b130              CBZ      r0,|L10.98|
;;;219    	{
;;;220    		while(flag1.Loop1_7s)
000054  e001              B        |L10.90|
                  |L10.86|
;;;221    		{
;;;222    			moto_STOP();		
000056  f7fffffe          BL       moto_STOP
                  |L10.90|
00005a  4802              LDR      r0,|L10.100|
00005c  7940              LDRB     r0,[r0,#5]            ;220  ; flag1
00005e  2800              CMP      r0,#0                 ;220
000060  d1f9              BNE      |L10.86|
                  |L10.98|
;;;223    		}			
;;;224    	}
;;;225    
;;;226    }
000062  bd10              POP      {r4,pc}
;;;227    
                          ENDP

                  |L10.100|
                          DCD      flag1
                  |L10.104|
                          DCD      Mark_forward

                          AREA ||i.loop_2||, CODE, READONLY, ALIGN=2

                  loop_2 PROC
;;;284    /******************2*****************************************/
;;;285    void loop_2(void)
000000  b510              PUSH     {r4,lr}
;;;286    {
;;;287    	// 250HZ
;;;288    	if(flag2.Loop2_250Hz)
000002  4812              LDR      r0,|L11.76|
000004  7800              LDRB     r0,[r0,#0]  ; flag2
000006  b130              CBZ      r0,|L11.22|
;;;289    	{
;;;290    		flag2.Loop2_250Hz=0;
000008  2000              MOVS     r0,#0
00000a  4910              LDR      r1,|L11.76|
00000c  7008              STRB     r0,[r1,#0]
;;;291    		UsbCmdPro();	//USB发送数据	
00000e  f7fffffe          BL       UsbCmdPro
;;;292    		FailSafeLEDAlarm();	//LED状态指示灯
000012  f7fffffe          BL       FailSafeLEDAlarm
                  |L11.22|
;;;293    	}	
;;;294    	// 100HZ
;;;295    	if(flag2.Loop2_100Hz)
000016  480d              LDR      r0,|L11.76|
000018  7840              LDRB     r0,[r0,#1]  ; flag2
00001a  b130              CBZ      r0,|L11.42|
;;;296    	{
;;;297    		flag2.Loop2_100Hz=0;
00001c  2000              MOVS     r0,#0
00001e  490b              LDR      r1,|L11.76|
000020  7048              STRB     r0,[r1,#1]
;;;298    		mavlink();		//串口数据发送
000022  f7fffffe          BL       mavlink
;;;299    		Screen_Update();//屏幕数据更新
000026  f7fffffe          BL       Screen_Update
                  |L11.42|
;;;300    	}
;;;301    	if(flag2.Loop2_10Hz)
00002a  4808              LDR      r0,|L11.76|
00002c  7880              LDRB     r0,[r0,#2]  ; flag2
00002e  b120              CBZ      r0,|L11.58|
;;;302    	{
;;;303    		flag2.Loop2_10Hz=0;
000030  2000              MOVS     r0,#0
000032  4906              LDR      r1,|L11.76|
000034  7088              STRB     r0,[r1,#2]
;;;304    		EE_SAVE_Attitude_PID();//保存姿态PID参数
000036  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L11.58|
;;;305    	}
;;;306    //////////////////////////////
;;;307    	if(flag2.Loop2_3s)//3s //前飞停止
;;;308    	{
;;;309    //		while(Mark_forward_1)
;;;310    //		{
;;;311    //			moto_STOP();		
;;;312    //		}			
;;;313    	}
;;;314    	if(flag2.Loop2_7s)//7s 回飞停止位
00003a  4804              LDR      r0,|L11.76|
00003c  7940              LDRB     r0,[r0,#5]  ; flag2
00003e  b118              CBZ      r0,|L11.72|
;;;315    	{
;;;316    		while(1)
000040  e001              B        |L11.70|
                  |L11.66|
;;;317    		{
;;;318    			moto_STOP();		
000042  f7fffffe          BL       moto_STOP
                  |L11.70|
000046  e7fc              B        |L11.66|
                  |L11.72|
;;;319    		}			
;;;320    	}
;;;321    
;;;322    }
000048  bd10              POP      {r4,pc}
;;;323    
                          ENDP

00004a  0000              DCW      0x0000
                  |L11.76|
                          DCD      flag2

                          AREA ||i.loop_3||, CODE, READONLY, ALIGN=2

                  loop_3 PROC
;;;372    /******************3*****************************************/
;;;373    void loop_3(void)
000000  b510              PUSH     {r4,lr}
;;;374    {
;;;375    	// 250HZ
;;;376    	if(flag3.Loop3_250Hz)
000002  4812              LDR      r0,|L12.76|
000004  7800              LDRB     r0,[r0,#0]  ; flag3
000006  b130              CBZ      r0,|L12.22|
;;;377    	{
;;;378    		flag3.Loop3_250Hz=0;
000008  2000              MOVS     r0,#0
00000a  4910              LDR      r1,|L12.76|
00000c  7008              STRB     r0,[r1,#0]
;;;379    		UsbCmdPro();	//USB发送数据	
00000e  f7fffffe          BL       UsbCmdPro
;;;380    		FailSafeLEDAlarm();	//LED状态指示灯
000012  f7fffffe          BL       FailSafeLEDAlarm
                  |L12.22|
;;;381    	}	
;;;382    	// 100HZ
;;;383    	if(flag3.Loop3_100Hz)
000016  480d              LDR      r0,|L12.76|
000018  7840              LDRB     r0,[r0,#1]  ; flag3
00001a  b130              CBZ      r0,|L12.42|
;;;384    	{
;;;385    		flag3.Loop3_100Hz=0;
00001c  2000              MOVS     r0,#0
00001e  490b              LDR      r1,|L12.76|
000020  7048              STRB     r0,[r1,#1]
;;;386    		mavlink();		//串口数据发送
000022  f7fffffe          BL       mavlink
;;;387    		Screen_Update();//屏幕数据更新
000026  f7fffffe          BL       Screen_Update
                  |L12.42|
;;;388    	}
;;;389    	if(flag3.Loop3_10Hz)
00002a  4808              LDR      r0,|L12.76|
00002c  7880              LDRB     r0,[r0,#2]  ; flag3
00002e  b120              CBZ      r0,|L12.58|
;;;390    	{
;;;391    		flag3.Loop3_10Hz=0;
000030  2000              MOVS     r0,#0
000032  4906              LDR      r1,|L12.76|
000034  7088              STRB     r0,[r1,#2]
;;;392    		EE_SAVE_Attitude_PID();//保存姿态PID参数
000036  f7fffffe          BL       EE_SAVE_Attitude_PID
                  |L12.58|
;;;393    	}
;;;394    //	if(flag3.Loop3_5s)//5s 回飞停止位
;;;395    //	{
;;;396    //		while(1)
;;;397    //		{
;;;398    //			moto_STOP();		
;;;399    //		}flag3.Loop3_2s			
;;;400    //	}
;;;401    	if(flag3.Loop3_5s)//5s 回飞停止位
00003a  4804              LDR      r0,|L12.76|
00003c  79c0              LDRB     r0,[r0,#7]  ; flag3
00003e  b118              CBZ      r0,|L12.72|
;;;402    	{
;;;403    		while(1)
000040  e001              B        |L12.70|
                  |L12.66|
;;;404    		{
;;;405    			moto_STOP();		
000042  f7fffffe          BL       moto_STOP
                  |L12.70|
000046  e7fc              B        |L12.66|
                  |L12.72|
;;;406    		}			
;;;407    	}
;;;408    }
000048  bd10              POP      {r4,pc}
;;;409    
                          ENDP

00004a  0000              DCW      0x0000
                  |L12.76|
                          DCD      flag3

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  tick_1
                          %        12
                  tick_2
                          %        10
                  tick_3
                          %        24
                  flag
                          %        14

                          AREA ||.data||, DATA, ALIGN=2

                  tick
000000  00000000          DCW      0x0000,0x0000
000004  00000000          DCW      0x0000,0x0000
                  Battery_Voltage
                          DCD      0x00000000
                  flag1
                          DCD      0x00000000
000010  0000              DCB      0x00,0x00
                  flag2
000012  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  flag3
                          %        8

; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\Flash\Obj\time.o --depend=.\Flash\Obj\time.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\sys -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Flash\Obj\time.crf ..\..\User\Driver\TIM\time.c]
                          THUMB

                          AREA ||i.Nvic_Init||, CODE, READONLY, ALIGN=1

                  Nvic_Init PROC
;;;40     }
;;;41     void Nvic_Init(void)
000000  b508              PUSH     {r3,lr}
;;;42     {
;;;43     	NVIC_InitTypeDef NVIC_InitStructure;
;;;44     	
;;;45     	/* NVIC_PriorityGroup */
;;;46     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
000002  f44f60a0          MOV      r0,#0x500
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;47     	
;;;48     	NVIC_InitStructure.NVIC_IRQChannel=TIM5_IRQn;
00000a  2032              MOVS     r0,#0x32
00000c  f88d0000          STRB     r0,[sp,#0]
;;;49     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
000010  2002              MOVS     r0,#2
000012  f88d0001          STRB     r0,[sp,#1]
;;;50     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000016  2000              MOVS     r0,#0
000018  f88d0002          STRB     r0,[sp,#2]
;;;51     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;52     	NVIC_Init(&NVIC_InitStructure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;53     	
;;;54     	/* Enable the USARTy Interrupt */
;;;55     //	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;	 
;;;56     //	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
;;;57     //	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
;;;58     //	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
;;;59     //	NVIC_Init(&NVIC_InitStructure);
;;;60     	
;;;61     	/* Enable the USARTy Interrupt */
;;;62     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;	 
000028  201d              MOVS     r0,#0x1d
00002a  f88d0000          STRB     r0,[sp,#0]
;;;63     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
00002e  2000              MOVS     r0,#0
000030  f88d0001          STRB     r0,[sp,#1]
;;;64     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
000034  2002              MOVS     r0,#2
000036  f88d0002          STRB     r0,[sp,#2]
;;;65     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00003a  2001              MOVS     r0,#1
00003c  f88d0003          STRB     r0,[sp,#3]
;;;66     	NVIC_Init(&NVIC_InitStructure);
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       NVIC_Init
;;;67     	
;;;68     
;;;69     }
000046  bd08              POP      {r3,pc}
;;;70      
                          ENDP


                          AREA ||i.TIM5_Config||, CODE, READONLY, ALIGN=2

                  TIM5_Config PROC
;;;16     *******************************************************************************/
;;;17     void TIM5_Config(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;18     {
;;;19     	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
;;;20     	//基础设置，时基和比较输出设置，由于这里只需定时，所以不用OC比较输出
;;;21     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5,ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;22     	
;;;23     	TIM_DeInit(TIM5);
00000a  4810              LDR      r0,|L2.76|
00000c  f7fffffe          BL       TIM_DeInit
;;;24     
;;;25     	TIM_TimeBaseStructure.TIM_Period=2000;//装载值
000010  f44f60fa          MOV      r0,#0x7d0
000014  f8ad0004          STRH     r0,[sp,#4]
;;;26     	//prescaler is 1200,that is 72000000/72/500=2000Hz;
;;;27     	TIM_TimeBaseStructure.TIM_Prescaler=72-1;//分频系数
000018  2047              MOVS     r0,#0x47
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;28     	//set clock division 
;;;29     	TIM_TimeBaseStructure.TIM_ClockDivision=TIM_CKD_DIV1; //or TIM_CKD_DIV2 or TIM_CKD_DIV4
00001e  2000              MOVS     r0,#0
000020  f8ad0006          STRH     r0,[sp,#6]
;;;30     	//count up
;;;31     	TIM_TimeBaseStructure.TIM_CounterMode=TIM_CounterMode_Up;
000024  f8ad0002          STRH     r0,[sp,#2]
;;;32     	
;;;33     	TIM_TimeBaseInit(TIM5,&TIM_TimeBaseStructure);
000028  4669              MOV      r1,sp
00002a  4808              LDR      r0,|L2.76|
00002c  f7fffffe          BL       TIM_TimeBaseInit
;;;34     	//clear the TIM5 overflow interrupt flag
;;;35     	TIM_ClearFlag(TIM5,TIM_FLAG_Update);
000030  2101              MOVS     r1,#1
000032  4806              LDR      r0,|L2.76|
000034  f7fffffe          BL       TIM_ClearFlag
;;;36     	//TIM5 overflow interrupt enable
;;;37     	TIM_ITConfig(TIM5,TIM_IT_Update,ENABLE);
000038  2201              MOVS     r2,#1
00003a  4611              MOV      r1,r2
00003c  4803              LDR      r0,|L2.76|
00003e  f7fffffe          BL       TIM_ITConfig
;;;38     	//enable TIM5
;;;39     	TIM_Cmd(TIM5,DISABLE);
000042  2100              MOVS     r1,#0
000044  4801              LDR      r0,|L2.76|
000046  f7fffffe          BL       TIM_Cmd
;;;40     }
00004a  bd0e              POP      {r1-r3,pc}
;;;41     void Nvic_Init(void)
                          ENDP

                  |L2.76|
                          DCD      0x40000c00

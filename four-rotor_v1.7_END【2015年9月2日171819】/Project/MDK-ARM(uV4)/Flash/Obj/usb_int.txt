; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -o.\Flash\Obj\usb_int.o --depend=.\Flash\Obj\usb_int.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I..\..\User\Modules\Modules_ms5611 -I..\..\User\Modules\Modules_ultrasonic -I..\..\User\sys -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC -ID:\KEIL\KEIL_Pro\keil安装\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\Flash\Obj\usb_int.crf ..\..\Libraries\STM32_USB-FS-Device_Driver\src\usb_int.c]
                          THUMB

                          AREA ||i.CTR_HP||, CODE, READONLY, ALIGN=2

                  CTR_HP PROC
;;;151    *******************************************************************************/
;;;152    void CTR_HP(void)
000000  b510              PUSH     {r4,lr}
;;;153    {
;;;154      uint32_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;155    
;;;156      while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e04a              B        |L1.156|
                  |L1.6|
;;;157      {
;;;158        _SetISTR((uint16_t)CLR_CTR); /* clear CTR flag */
000006  f64770ff          MOV      r0,#0x7fff
00000a  4929              LDR      r1,|L1.176|
00000c  6008              STR      r0,[r1,#0]
;;;159        /* extract highest priority endpoint number */
;;;160        EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
00000e  4829              LDR      r0,|L1.180|
000010  8800              LDRH     r0,[r0,#0]  ; wIstr
000012  f000000f          AND      r0,r0,#0xf
000016  4928              LDR      r1,|L1.184|
000018  7008              STRB     r0,[r1,#0]
;;;161        /* process related endpoint register */
;;;162        wEPVal = _GetENDPOINT(EPindex);
00001a  4608              MOV      r0,r1
00001c  7800              LDRB     r0,[r0,#0]  ; EPindex
00001e  4927              LDR      r1,|L1.188|
000020  eb010080          ADD      r0,r1,r0,LSL #2
000024  f8d00c00          LDR      r0,[r0,#0xc00]
000028  b284              UXTH     r4,r0
;;;163        if ((wEPVal & EP_CTR_RX) != 0)
00002a  f4144f00          TST      r4,#0x8000
00002e  d019              BEQ      |L1.100|
;;;164        {
;;;165          /* clear int flag */
;;;166          _ClearEP_CTR_RX(EPindex);
000030  4821              LDR      r0,|L1.184|
000032  7800              LDRB     r0,[r0,#0]  ; EPindex
000034  eb010080          ADD      r0,r1,r0,LSL #2
000038  f8d00c00          LDR      r0,[r0,#0xc00]
00003c  f3c0000e          UBFX     r0,r0,#0,#15
000040  f648718f          MOV      r1,#0x8f8f
000044  4008              ANDS     r0,r0,r1
000046  491c              LDR      r1,|L1.184|
000048  7809              LDRB     r1,[r1,#0]  ; EPindex
00004a  4a1c              LDR      r2,|L1.188|
00004c  eb020181          ADD      r1,r2,r1,LSL #2
000050  f8c10c00          STR      r0,[r1,#0xc00]
;;;167    
;;;168          /* call OUT service function */
;;;169          (*pEpInt_OUT[EPindex-1])();
000054  4918              LDR      r1,|L1.184|
000056  7809              LDRB     r1,[r1,#0]  ; EPindex
000058  1e49              SUBS     r1,r1,#1
00005a  4a19              LDR      r2,|L1.192|
00005c  f8520021          LDR      r0,[r2,r1,LSL #2]
000060  4780              BLX      r0
000062  e01b              B        |L1.156|
                  |L1.100|
;;;170    
;;;171        } /* if((wEPVal & EP_CTR_RX) */
;;;172        else if ((wEPVal & EP_CTR_TX) != 0)
000064  f0140f80          TST      r4,#0x80
000068  d018              BEQ      |L1.156|
;;;173        {
;;;174          /* clear int flag */
;;;175          _ClearEP_CTR_TX(EPindex);
00006a  4813              LDR      r0,|L1.184|
00006c  7800              LDRB     r0,[r0,#0]  ; EPindex
00006e  4913              LDR      r1,|L1.188|
000070  eb010080          ADD      r0,r1,r0,LSL #2
000074  f8d00c00          LDR      r0,[r0,#0xc00]
000078  b280              UXTH     r0,r0
00007a  f648710f          MOV      r1,#0x8f0f
00007e  4008              ANDS     r0,r0,r1
000080  490d              LDR      r1,|L1.184|
000082  7809              LDRB     r1,[r1,#0]  ; EPindex
000084  4a0d              LDR      r2,|L1.188|
000086  eb020181          ADD      r1,r2,r1,LSL #2
00008a  f8c10c00          STR      r0,[r1,#0xc00]
;;;176    
;;;177          /* call IN service function */
;;;178          (*pEpInt_IN[EPindex-1])();
00008e  490a              LDR      r1,|L1.184|
000090  7809              LDRB     r1,[r1,#0]  ; EPindex
000092  1e49              SUBS     r1,r1,#1
000094  4a0b              LDR      r2,|L1.196|
000096  f8520021          LDR      r0,[r2,r1,LSL #2]
00009a  4780              BLX      r0
                  |L1.156|
00009c  4804              LDR      r0,|L1.176|
00009e  6800              LDR      r0,[r0,#0]            ;156
0000a0  b280              UXTH     r0,r0                 ;156
0000a2  4904              LDR      r1,|L1.180|
0000a4  8008              STRH     r0,[r1,#0]            ;156
0000a6  f4104f00          TST      r0,#0x8000            ;156
0000aa  d1ac              BNE      |L1.6|
;;;179    
;;;180    
;;;181        } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;182    
;;;183      }/* while(...) */
;;;184    }
0000ac  bd10              POP      {r4,pc}
;;;185    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40005c44
                  |L1.180|
                          DCD      wIstr
                  |L1.184|
                          DCD      EPindex
                  |L1.188|
                          DCD      0x40005000
                  |L1.192|
                          DCD      pEpInt_OUT
                  |L1.196|
                          DCD      pEpInt_IN

                          AREA ||i.CTR_LP||, CODE, READONLY, ALIGN=2

                  CTR_LP PROC
;;;41     *******************************************************************************/
;;;42     void CTR_LP(void)
000000  b510              PUSH     {r4,lr}
;;;43     {
;;;44       __IO uint16_t wEPVal = 0;
000002  2400              MOVS     r4,#0
;;;45       /* stay in loop while pending interrupts */
;;;46       while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
000004  e122              B        |L2.588|
                  |L2.6|
;;;47       {
;;;48         /* extract highest priority endpoint number */
;;;49         EPindex = (uint8_t)(wIstr & ISTR_EP_ID);
000006  4897              LDR      r0,|L2.612|
000008  8800              LDRH     r0,[r0,#0]  ; wIstr
00000a  f000000f          AND      r0,r0,#0xf
00000e  4996              LDR      r1,|L2.616|
000010  7008              STRB     r0,[r1,#0]
;;;50         if (EPindex == 0)
000012  4608              MOV      r0,r1
000014  7800              LDRB     r0,[r0,#0]  ; EPindex
000016  bbe8              CBNZ     r0,|L2.148|
;;;51         {
;;;52           /* Decode and service control endpoint interrupt */
;;;53           /* calling related service routine */
;;;54           /* (Setup0_Process, In0_Process, Out0_Process) */
;;;55     
;;;56           /* save RX & TX status */
;;;57           /* and set both to NAK */
;;;58     
;;;59     
;;;60     	    SaveRState = _GetENDPOINT(ENDP0);
000018  4894              LDR      r0,|L2.620|
00001a  6800              LDR      r0,[r0,#0]
00001c  4994              LDR      r1,|L2.624|
00001e  8008              STRH     r0,[r1,#0]
;;;61     	    SaveTState = SaveRState & EPTX_STAT;
000020  4608              MOV      r0,r1
000022  8800              LDRH     r0,[r0,#0]  ; SaveRState
000024  f0000030          AND      r0,r0,#0x30
000028  4992              LDR      r1,|L2.628|
00002a  8008              STRH     r0,[r1,#0]
;;;62     	    SaveRState &=  EPRX_STAT;	
00002c  4890              LDR      r0,|L2.624|
00002e  8800              LDRH     r0,[r0,#0]  ; SaveRState
000030  f4005040          AND      r0,r0,#0x3000
000034  498e              LDR      r1,|L2.624|
000036  8008              STRH     r0,[r1,#0]
;;;63     
;;;64     	    _SetEPRxTxStatus(ENDP0,EP_RX_NAK,EP_TX_NAK);
000038  498f              LDR      r1,|L2.632|
00003a  f8d11c00          LDR      r1,[r1,#0xc00]
00003e  b289              UXTH     r1,r1
000040  f64b72bf          MOV      r2,#0xbfbf
000044  ea010002          AND      r0,r1,r2
000048  f4805000          EOR      r0,r0,#0x2000
00004c  f0800020          EOR      r0,r0,#0x20
000050  f4404100          ORR      r1,r0,#0x8000
000054  f0410180          ORR      r1,r1,#0x80
000058  4a87              LDR      r2,|L2.632|
00005a  f8c21c00          STR      r1,[r2,#0xc00]
;;;65     
;;;66           /* DIR bit = origin of the interrupt */
;;;67     
;;;68           if ((wIstr & ISTR_DIR) == 0)
00005e  4881              LDR      r0,|L2.612|
000060  8800              LDRH     r0,[r0,#0]  ; wIstr
000062  f0100f10          TST      r0,#0x10
000066  d138              BNE      |L2.218|
;;;69           {
;;;70             /* DIR = 0 */
;;;71     
;;;72             /* DIR = 0      => IN  int */
;;;73             /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
;;;74     
;;;75     
;;;76             _ClearEP_CTR_TX(ENDP0);
000068  4880              LDR      r0,|L2.620|
00006a  6800              LDR      r0,[r0,#0]
00006c  b280              UXTH     r0,r0
00006e  f648710f          MOV      r1,#0x8f0f
000072  ea000001          AND      r0,r0,r1
000076  4611              MOV      r1,r2
000078  f8c10c00          STR      r0,[r1,#0xc00]
;;;77             In0_Process();
00007c  f7fffffe          BL       In0_Process
;;;78     
;;;79                /* before terminate set Tx & Rx status */
;;;80     
;;;81                 _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
000080  497a              LDR      r1,|L2.620|
000082  6809              LDR      r1,[r1,#0]
000084  b289              UXTH     r1,r1
000086  f64b72bf          MOV      r2,#0xbfbf
00008a  ea010002          AND      r0,r1,r2
00008e  4978              LDR      r1,|L2.624|
000090  8809              LDRH     r1,[r1,#0]  ; SaveRState
000092  e000              B        |L2.150|
                  |L2.148|
000094  e09a              B        |L2.460|
                  |L2.150|
000096  f4115f80          TST      r1,#0x1000
00009a  d001              BEQ      |L2.160|
00009c  f4805080          EOR      r0,r0,#0x1000
                  |L2.160|
0000a0  4973              LDR      r1,|L2.624|
0000a2  8809              LDRH     r1,[r1,#0]  ; SaveRState
0000a4  f4115f00          TST      r1,#0x2000
0000a8  d001              BEQ      |L2.174|
0000aa  f4805000          EOR      r0,r0,#0x2000
                  |L2.174|
0000ae  4971              LDR      r1,|L2.628|
0000b0  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000b2  f0110f10          TST      r1,#0x10
0000b6  d001              BEQ      |L2.188|
0000b8  f0800010          EOR      r0,r0,#0x10
                  |L2.188|
0000bc  496d              LDR      r1,|L2.628|
0000be  8809              LDRH     r1,[r1,#0]  ; SaveTState
0000c0  f0110f20          TST      r1,#0x20
0000c4  d001              BEQ      |L2.202|
0000c6  f0800020          EOR      r0,r0,#0x20
                  |L2.202|
0000ca  b281              UXTH     r1,r0
0000cc  f4414100          ORR      r1,r1,#0x8000
0000d0  f0410180          ORR      r1,r1,#0x80
0000d4  4a65              LDR      r2,|L2.620|
0000d6  6011              STR      r1,[r2,#0]
                  |L2.216|
;;;82     		  return;
;;;83           }
;;;84           else
;;;85           {
;;;86             /* DIR = 1 */
;;;87     
;;;88             /* DIR = 1 & CTR_RX       => SETUP or OUT int */
;;;89             /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
;;;90     
;;;91             wEPVal = _GetENDPOINT(ENDP0);
;;;92             
;;;93             if ((wEPVal &EP_SETUP) != 0)
;;;94             {
;;;95               _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
;;;96               Setup0_Process();
;;;97               /* before terminate set Tx & Rx status */
;;;98     
;;;99     		      _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;100              return;
;;;101            }
;;;102    
;;;103            else if ((wEPVal & EP_CTR_RX) != 0)
;;;104            {
;;;105              _ClearEP_CTR_RX(ENDP0);
;;;106              Out0_Process();
;;;107              /* before terminate set Tx & Rx status */
;;;108         
;;;109    		     _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
;;;110              return;
;;;111            }
;;;112          }
;;;113        }/* if(EPindex == 0) */
;;;114        else
;;;115        {
;;;116          /* Decode and service non control endpoints interrupt  */
;;;117    
;;;118          /* process related endpoint register */
;;;119          wEPVal = _GetENDPOINT(EPindex);
;;;120          if ((wEPVal & EP_CTR_RX) != 0)
;;;121          {
;;;122            /* clear int flag */
;;;123            _ClearEP_CTR_RX(EPindex);
;;;124    
;;;125            /* call OUT service function */
;;;126            (*pEpInt_OUT[EPindex-1])();
;;;127    
;;;128          } /* if((wEPVal & EP_CTR_RX) */
;;;129    
;;;130          if ((wEPVal & EP_CTR_TX) != 0)
;;;131          {
;;;132            /* clear int flag */
;;;133            _ClearEP_CTR_TX(EPindex);
;;;134    
;;;135            /* call IN service function */
;;;136            (*pEpInt_IN[EPindex-1])();
;;;137          } /* if((wEPVal & EP_CTR_TX) != 0) */
;;;138    
;;;139        }/* if(EPindex == 0) else */
;;;140    
;;;141      }/* while(...) */
;;;142    }
0000d8  bd10              POP      {r4,pc}
                  |L2.218|
0000da  4864              LDR      r0,|L2.620|
0000dc  6800              LDR      r0,[r0,#0]            ;91
0000de  b284              UXTH     r4,r0                 ;91
0000e0  f4146f00          TST      r4,#0x800             ;93
0000e4  d037              BEQ      |L2.342|
0000e6  4861              LDR      r0,|L2.620|
0000e8  6800              LDR      r0,[r0,#0]            ;95
0000ea  f3c0000e          UBFX     r0,r0,#0,#15          ;95
0000ee  f648718f          MOV      r1,#0x8f8f            ;95
0000f2  ea000001          AND      r0,r0,r1              ;95
0000f6  4960              LDR      r1,|L2.632|
0000f8  f8c10c00          STR      r0,[r1,#0xc00]        ;95
0000fc  f7fffffe          BL       Setup0_Process
000100  495a              LDR      r1,|L2.620|
000102  6809              LDR      r1,[r1,#0]            ;99
000104  b289              UXTH     r1,r1                 ;99
000106  f64b72bf          MOV      r2,#0xbfbf            ;99
00010a  ea010002          AND      r0,r1,r2              ;99
00010e  4958              LDR      r1,|L2.624|
000110  8809              LDRH     r1,[r1,#0]            ;99  ; SaveRState
000112  f4115f80          TST      r1,#0x1000            ;99
000116  d001              BEQ      |L2.284|
000118  f4805080          EOR      r0,r0,#0x1000         ;99
                  |L2.284|
00011c  4954              LDR      r1,|L2.624|
00011e  8809              LDRH     r1,[r1,#0]            ;99  ; SaveRState
000120  f4115f00          TST      r1,#0x2000            ;99
000124  d001              BEQ      |L2.298|
000126  f4805000          EOR      r0,r0,#0x2000         ;99
                  |L2.298|
00012a  4952              LDR      r1,|L2.628|
00012c  8809              LDRH     r1,[r1,#0]            ;99  ; SaveTState
00012e  f0110f10          TST      r1,#0x10              ;99
000132  d001              BEQ      |L2.312|
000134  f0800010          EOR      r0,r0,#0x10           ;99
                  |L2.312|
000138  494e              LDR      r1,|L2.628|
00013a  8809              LDRH     r1,[r1,#0]            ;99  ; SaveTState
00013c  f0110f20          TST      r1,#0x20              ;99
000140  d001              BEQ      |L2.326|
000142  f0800020          EOR      r0,r0,#0x20           ;99
                  |L2.326|
000146  b281              UXTH     r1,r0                 ;99
000148  f4414100          ORR      r1,r1,#0x8000         ;99
00014c  f0410180          ORR      r1,r1,#0x80           ;99
000150  4a46              LDR      r2,|L2.620|
000152  6011              STR      r1,[r2,#0]            ;99
000154  e7c0              B        |L2.216|
                  |L2.342|
000156  f4144f00          TST      r4,#0x8000            ;103
00015a  d077              BEQ      |L2.588|
00015c  4843              LDR      r0,|L2.620|
00015e  6800              LDR      r0,[r0,#0]            ;105
000160  f3c0000e          UBFX     r0,r0,#0,#15          ;105
000164  f648718f          MOV      r1,#0x8f8f            ;105
000168  ea000001          AND      r0,r0,r1              ;105
00016c  4942              LDR      r1,|L2.632|
00016e  f8c10c00          STR      r0,[r1,#0xc00]        ;105
000172  f7fffffe          BL       Out0_Process
000176  493d              LDR      r1,|L2.620|
000178  6809              LDR      r1,[r1,#0]            ;109
00017a  b289              UXTH     r1,r1                 ;109
00017c  f64b72bf          MOV      r2,#0xbfbf            ;109
000180  ea010002          AND      r0,r1,r2              ;109
000184  493a              LDR      r1,|L2.624|
000186  8809              LDRH     r1,[r1,#0]            ;109  ; SaveRState
000188  f4115f80          TST      r1,#0x1000            ;109
00018c  d001              BEQ      |L2.402|
00018e  f4805080          EOR      r0,r0,#0x1000         ;109
                  |L2.402|
000192  4937              LDR      r1,|L2.624|
000194  8809              LDRH     r1,[r1,#0]            ;109  ; SaveRState
000196  f4115f00          TST      r1,#0x2000            ;109
00019a  d001              BEQ      |L2.416|
00019c  f4805000          EOR      r0,r0,#0x2000         ;109
                  |L2.416|
0001a0  4934              LDR      r1,|L2.628|
0001a2  8809              LDRH     r1,[r1,#0]            ;109  ; SaveTState
0001a4  f0110f10          TST      r1,#0x10              ;109
0001a8  d001              BEQ      |L2.430|
0001aa  f0800010          EOR      r0,r0,#0x10           ;109
                  |L2.430|
0001ae  4931              LDR      r1,|L2.628|
0001b0  8809              LDRH     r1,[r1,#0]            ;109  ; SaveTState
0001b2  f0110f20          TST      r1,#0x20              ;109
0001b6  d001              BEQ      |L2.444|
0001b8  f0800020          EOR      r0,r0,#0x20           ;109
                  |L2.444|
0001bc  b281              UXTH     r1,r0                 ;109
0001be  f4414100          ORR      r1,r1,#0x8000         ;109
0001c2  f0410180          ORR      r1,r1,#0x80           ;109
0001c6  4a29              LDR      r2,|L2.620|
0001c8  6011              STR      r1,[r2,#0]            ;109
0001ca  e785              B        |L2.216|
                  |L2.460|
0001cc  4826              LDR      r0,|L2.616|
0001ce  7800              LDRB     r0,[r0,#0]            ;119  ; EPindex
0001d0  4929              LDR      r1,|L2.632|
0001d2  eb010080          ADD      r0,r1,r0,LSL #2       ;119
0001d6  f8d00c00          LDR      r0,[r0,#0xc00]        ;119
0001da  b284              UXTH     r4,r0                 ;119
0001dc  f4144f00          TST      r4,#0x8000            ;120
0001e0  d018              BEQ      |L2.532|
0001e2  4821              LDR      r0,|L2.616|
0001e4  7800              LDRB     r0,[r0,#0]            ;123  ; EPindex
0001e6  eb010080          ADD      r0,r1,r0,LSL #2       ;123
0001ea  f8d00c00          LDR      r0,[r0,#0xc00]        ;123
0001ee  f3c0000e          UBFX     r0,r0,#0,#15          ;123
0001f2  f648718f          MOV      r1,#0x8f8f            ;123
0001f6  4008              ANDS     r0,r0,r1              ;123
0001f8  491b              LDR      r1,|L2.616|
0001fa  7809              LDRB     r1,[r1,#0]            ;123  ; EPindex
0001fc  4a1e              LDR      r2,|L2.632|
0001fe  eb020181          ADD      r1,r2,r1,LSL #2       ;123
000202  f8c10c00          STR      r0,[r1,#0xc00]        ;123
000206  4918              LDR      r1,|L2.616|
000208  7809              LDRB     r1,[r1,#0]            ;126  ; EPindex
00020a  1e49              SUBS     r1,r1,#1              ;126
00020c  4a1b              LDR      r2,|L2.636|
00020e  f8520021          LDR      r0,[r2,r1,LSL #2]     ;126
000212  4780              BLX      r0                    ;126
                  |L2.532|
000214  f0140f80          TST      r4,#0x80              ;130
000218  d018              BEQ      |L2.588|
00021a  4813              LDR      r0,|L2.616|
00021c  7800              LDRB     r0,[r0,#0]            ;133  ; EPindex
00021e  4916              LDR      r1,|L2.632|
000220  eb010080          ADD      r0,r1,r0,LSL #2       ;133
000224  f8d00c00          LDR      r0,[r0,#0xc00]        ;133
000228  b280              UXTH     r0,r0                 ;133
00022a  f648710f          MOV      r1,#0x8f0f            ;133
00022e  4008              ANDS     r0,r0,r1              ;133
000230  490d              LDR      r1,|L2.616|
000232  7809              LDRB     r1,[r1,#0]            ;133  ; EPindex
000234  4a10              LDR      r2,|L2.632|
000236  eb020181          ADD      r1,r2,r1,LSL #2       ;133
00023a  f8c10c00          STR      r0,[r1,#0xc00]        ;133
00023e  490a              LDR      r1,|L2.616|
000240  7809              LDRB     r1,[r1,#0]            ;136  ; EPindex
000242  1e49              SUBS     r1,r1,#1              ;136
000244  4a0e              LDR      r2,|L2.640|
000246  f8520021          LDR      r0,[r2,r1,LSL #2]     ;136
00024a  4780              BLX      r0                    ;136
                  |L2.588|
00024c  480d              LDR      r0,|L2.644|
00024e  6800              LDR      r0,[r0,#0]            ;46
000250  b280              UXTH     r0,r0                 ;46
000252  4904              LDR      r1,|L2.612|
000254  8008              STRH     r0,[r1,#0]            ;46
000256  f4104f00          TST      r0,#0x8000            ;46
00025a  f47faed4          BNE      |L2.6|
00025e  bf00              NOP      
000260  e73a              B        |L2.216|
;;;143    
                          ENDP

000262  0000              DCW      0x0000
                  |L2.612|
                          DCD      wIstr
                  |L2.616|
                          DCD      EPindex
                  |L2.620|
                          DCD      0x40005c00
                  |L2.624|
                          DCD      SaveRState
                  |L2.628|
                          DCD      SaveTState
                  |L2.632|
                          DCD      0x40005000
                  |L2.636|
                          DCD      pEpInt_OUT
                  |L2.640|
                          DCD      pEpInt_IN
                  |L2.644|
                          DCD      0x40005c44

                          AREA ||.data||, DATA, ALIGN=1

                  SaveRState
000000  0000              DCB      0x00,0x00
                  SaveTState
000002  0000              DCB      0x00,0x00
